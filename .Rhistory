library(raster)
library(RStoolbox)
#set a temporary working directory
rasterOptions(tmpdir = "D:\WUE Documents\semester 3\intro to programming\temp_dir_R")
#set a temporary working directory
rasterOptions(tmpdir = "D:/WUE Documents/semester 3/intro to programming/temp_dir_R")
metaData <- readMeta("./LC81790272016197LGN00/LC81790272016197LGN00_MTL.txt")
getwd()
metaData <- readMeta(".LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta(".LC08_L2SP_179027_20160715_20200906_02_T1_MTL")
metaData <- readMeta(".LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
library(raster)
metaData <- readMeta(".LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
library(RStoolbox)
library(raster)
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_ANG.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.xml")
metaData <- readMeta("./L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt", raw = FALSE)
##Example metadata file (MTL)
mtlFile  <- system.file("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt", package="RStoolbox")
## Read metadata
metaData <- readMeta(mtlFile)
## Read metadata
metaData <- readMeta(mtlFile)
##Example metadata file (MTL)
mtlFile  <- system.file("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt", package="RStoolbox")
## Read metadata
metaData <- readMeta(mtlFile)
##Example metadata file (MTL)
mtlFile  <- system.file("/LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt", package="RStoolbox")
## Read metadata
metaData <- readMeta(mtlFile)
##Example metadata file (MTL)
mtlFile  <- system.file("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt", package="RStoolbox")
## Read metadata
metaData <- readMeta(mtlFile)
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt", raw = FALSE)
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
lsat8 <- stackMeta("./LC81790272016197LGN00/LC81790272016197LGN00_MTL.txt")
lsat8 <- stackMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
#set a temporary working directory
rasterOptions(tmpdir = "D:/WUE Documents/semester 3/intro to programming/suhiR/temp_dir_R")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1/LC08_L2SP_179027_20160715_20200906_02_T1_MTL")
metaData <- readMeta("/LC08_L2SP_179027_20160715_20200906_02_T1/LC08_L2SP_179027_20160715_20200906_02_T1_MTL")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("./LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
metaData <- readMeta("LC08_L2SP_179027_20160715_20200906_02_T1_MTL.txt")
library(Raster)
library(raster)
library(rastervis)
library(rasterVis)
install.packages("rasterVis")
install.packages("rasterVis")
library(rasterVis)
library(maptools)
install.packages("maptools")
library(maptools)
install.packages("maptools")
library(maptools)
library(sp)
library(terra)
setwd("Downloads")
read_raster <- raster(""D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.TIF"")
read_raster <- raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.TIF")
read_raster <- raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.TIF")
read_raster <- raster::raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.TIF")
l8_b4 <- raster::raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.TIF")
l8_b4
#read the raster
l8_b4 <- raster::raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LT05_L1TP_194025_19970922_20200910_02_T1_refl.tif")
#read the raster
l5_wue <- raster::raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LT05_L1TP_194025_19970922_20200910_02_T1_refl.tif")
l5_wue
#write a new raster with higher dimensions
new_raster <- raster(nrow=36605, ncol=39755)
#write a new raster with higher dimensions
new_raster <- raster :: raster(nrow=36605, ncol=39755)
new_raster
library(raster)
library(RStoolbox)
library(ggplot2)
library(sp)
library(sf)
temp_values <- raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_179027_20160715_20200906_02_T1_ST_B10.TIF")
#scaling and converting the values in band 10 to degree celsius
temp_values_scaled<- ((temp_values*0.00341802)+149.0)-273.15
# Read raster data
lst_raster <- raster("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_179027_20160715_20200906_02_T1_ST_B10.TIF")  # Land surface temperature raster
lst_raster_scaled <- ((lst_raster*0.00341802)+149.0)-273.15
lst_raster <- lst_raster_scaled
lst_raster
lc_raster <- raster("D:/WUE Documents/semester 3/intro to programming/suhiR/43R_20200101-20210101.tif")    # Land cover raster (urban vs. non-urban)
lc_raster
plot(lc_raster)
# Subset raster data (if needed)
# For example, subset to a specific extent or region of interest
lst_raster_cropped <- crop(lst_raster, extent(3115, 3145, 7401, 7439))
urban_lst <- lst_raster[lc_raster == 1]
library(terra)
library(RcolorBrewer)
install.packages("RColorBrewer")
library(RcolorBrewer)
read_raster_stack <- function(folder_path, pattern = ".tif$") {
# List raster files in the specified folder
raster_files <- list.files(path = folder_path, pattern = pattern, full.names = TRUE)
# Read the raster stack
raster_stack <- stack(raster_files)
return(raster_stack)
}
read_raster_stack("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1", pattern = ".tif$")
read_raster_stack("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1", pattern = ".tif")
read_raster_stack("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1", pattern = ".tif")
l8_b1 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B1.tif")
l8_b1 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B1.tif")
#load the raster data
setwd()
#load the raster data
setwd("D:/WUE Documents/semester 3/intro to programming/suhiR/LC08_L2SP_149038_20220628_20220706_02_T1")
l8_b1 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B1.tif")
l8_b2 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B2.tif")
l8_b3 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B3")
l8_b3 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B3.tif")
l8_b4 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.tif")
l8_b5 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B5.tif")
l8_b6 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B6")
l8_b6 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B6.tif")
l8_b7 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B7.tif")
l8_b10 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_B10.tif")
#now scale the raster files
#first stack bands 1 to 7
raster_stack_reflectance <- stack(l8_b1, l8_b2, l8_b3, l8_b4, l8_b5, l8_b6, l8_b7)
#now scale the raster files
#first stack bands 1 to 7
raster_stack <- stack(l8_b1, l8_b2, l8_b3, l8_b4, l8_b5, l8_b6, l8_b7)
raster_stack_scaled <- (raster_stacked * 0.0000275) -0.2
raster_stack_scaled <- (raster_stack * 0.0000275) -0.2
#now crop the study area
#first load the shape file of AOI and match the projections
lahore <- st_read("Lahore.shp")
library(sp)
#now crop the study area
#first load the shape file of AOI and match the projections
lahore <- st_read("Lahore.shp")
library(sf)
#now crop the study area
#first load the shape file of AOI and match the projections
lahore <- st_read("Lahore.shp")
#now crop the study area
#first load the shape file of AOI and match the projections
lahore <- st_read("Lahore.shp")
l8_b6
crs(raster_stack)
crs(lahore)
crs(raster_stack) <- crs(lahore)
crs(raster_stack)
raster_stack_cropped <- crop(raster_stack, Lahore)
raster_stack_cropped <- mask(raster_stack, Lahore)
raster_stack_cropped <- crop(raster_stack, lahore)
raster_stack_cropped <- mask(raster_stack, lahore)
l8_b10_scaled <- ((l8_b10*0.00341802)+149.0)-273.15
l8_b10 <- l8_b10_scaled
l8_b10_masked <- mask(l8_b10, lahore)
plot(l8_b10_masked)
plot(l8_b10)
#now read teh landcover data
lc_lahore <- raster("43R_20200101-20210101.tif")
plot(lc_lahore)
lc_lahore_df <- as.data.frame(lc_lahore)
lc_lahore_df <- as.data.frame(lc_lahore)
View(lc_lahore)
lc_lahore_df <- as.data.frame(lc_lahore)
urban <- lc_lahore[lc_lahore == 1]
l8_b10 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_B10.tif")
#now scale the thermal bands
l8_b10_scaled = ((img_22_b10*0.00341802)+149.0)
#now scale the thermal bands
l8_b10_scaled = ((l8_b10*0.00341802)+149.0)
l8_b10 <- l8_b10_scaled
TB <- l8_b10_scaled
NDVI <- ndvi(l8_b5,l8_b4)
NDVI <- (l8_b5-l8_b4)/(l8_b5+l8_b4)
NDVI
min(NDVI)
min(values(NDVI))
max(values(NDVI))
values(NDVI)
plot(NDVI)
PV <- ((NDVI - (-0.1100374)) / (0.482486 - (-0.1100374))^2
PV <- ((NDVI - (-0.1100374)) / (0.482486 - (-0.1100374))^2)
PV <- ((NDVI - (-0.1100374)) / (0.482486 - (-0.1100374))^2)
PV
FV <- ((NDVI - (-0.1100374)) / (0.482486 - (-0.1100374))^2)
em <- 0.004 * FV + 0.986
em <- 0.004 * FV + 0.986
em
calculate_LST <- function(TB, em) {
# Calculate LST using the formula
LST <- (TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15
return(LST)
}
calculate_LST(l8_b10,em)
plot(LST)
calculate_LST <- function(TB, em) {
# Calculate LST using the formula
LST <- (TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15
LST_raster <- raster(TB)
# Assign LST values to the raster
values(LST_raster) <- LST
return(LST_raster)
}
calculate_LST(l8_b10,em)
calculate_LST <- function(TB, em) {
# Calculate LST using the formula
LST <- (TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15
LST <- writeRaster(LST, format="GTiff", overwrite=TRUE)
return(LST)
}
calculate_LST(l8_b10,em)
calculate_LST <- function(TB, em) {
# Calculate LST using the formula
LST <- (TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15
LST <- writeRaster(LST, LST_raster, format="GTiff", overwrite=TRUE)
return(LST)
}
calculate_LST(l8_b10,em)
calculate_LST <- function(TB, em) {
# Calculate LST using the formula
LST <- (TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15
LST <- writeRaster(LST, LST_raster, format="GTiff", overwrite=TRUE)
return(LST_raster)
}
calculate_LST(l8_b10,em)
calculate_LST(l8_b10,em)
calculate_LST <- function(TB, em) {
# Check if TB and em are raster objects
if (!all(is.raster(TB, em))) {
stop("TB and em must be raster objects")
}
# Ensure extent and resolution are the same
if (!all.equal(extent(TB), extent(em)) | !all.equal(resolution(TB), resolution(em))) {
stop("TB and em must have the same extent and resolution")
}
# Calculate LST using the formula within a raster expression
LST <- ((TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15)
# Return the LST raster with the same extent, resolution, and CRS as TB
return(raster(LST, CRS = CRS(TB), extent = extent(TB), resolution = resolution(TB)))
}
calculate_LST(l8_b10,em)
emi <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_EMIS.tif")
emi_scaled = ((emi*0.00341802)+149.0)
emi <- emi_scaled
calculate_LST <- function(TB, emi) {
# Check if TB and em are raster objects
if (!all(is.raster(TB, emi))) {
stop("TB and em must be raster objects")
}
# Ensure extent and resolution are the same
if (!all.equal(extent(TB), extent(emi)) | !all.equal(resolution(TB), resolution(emi))) {
stop("TB and em must have the same extent and resolution")
}
# Calculate LST using the formula within a raster expression
LST <- ((TB / (1 + (10.8 * (TB / 1.438)) * log(emi))) - 273.15)
# Return the LST raster with the same extent, resolution, and CRS as TB
return(raster(LST, CRS = CRS(TB), extent = extent(TB), resolution = resolution(TB)))
}
calculate_LST(l8_b10,emi)
calculate_LST <- function(TB, em) {
# Calculate LST using the formula
LST <- (TB / (1 + (10.8 * (TB / 1.438)) * log(em))) - 273.15
return(LST)
}
calculate_LST(l8_b10,em)
writeRaster(LST_raster, filename = "LST.tif")
LST_Raster <- calculate_LST(l8_b10,em)
LST_Raster
L8_Scale(input_band) {
L8_Scale(input_band){
L8_Scale <- function(input_band){
scaled_raster <- (input_band* 0.0000275) -0.2
return(raster(scaled_raster))
}
input_band <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.tif")
L8_Scale(input_band)
L8_Scale
scaled_band <- L8_Scale(input_band)
scaled_band
input_band
scaled_band
LST_Raster
L8_Scale <- function(input_band){
scaled_raster <- (input_band* 0.0000275) -0.2
return(scaled_raster)
}
input_band <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_SR_B4.tif")
scaled_band <- L8_Scale(input_band)
scaled_band
library(raster)
L8_Scale <- function(input_band){
scaled_raster <- (input_band* 0.0000275) -0.2
return(scaled_raster)
}
input_band <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_B10.tif")
scaled_band <- L8_Scale(input_band)
library(raster)
# Load your rasters (replace with your file names)
raster1 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_B10.tif")
# Load your rasters (replace with your file names)
raster1 <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_B10.tif")
raster2 <- raster("43R_20200101-20210101.tif")
# Get the extent of the raster with the larger extent
larger_extent <- extent(ifelse(area(extent(raster1)) > area(extent(raster2)), raster1, raster2))
raster1_aligned <- setExtent(raster1, larger_extent, keepres = TRUE)
extent_raster2 <- extent(raster2)
# Align the extent of raster1 to match raster2, keeping the resolution
raster1_aligned <- setExtent(raster1, extent_raster2, keepres = TRUE)
thermal <- raster1_aligned
thermal
raster2
raster1
# Align the extent of raster1 to match raster2, keeping the resolution
raster_thermal <- raster1_aligned <- setExtent(raster1, extent_raster2, keepres = TRUE)
raster_thermal
temperature <- raster("LC08_L2SP_149038_20220628_20220706_02_T1_ST_B10.tif")
landcover <- raster("43R_20200101-20210101.tif")
extent_landcover <- extent(landcover)
temperature_aligned <- setExtent(temperature, extent_landcover, keepres = TRUE)
temperature <- temperature_aligned
urban <- landcover[landcover == 1]
landcover_df <- as.data.frame(landcover)
